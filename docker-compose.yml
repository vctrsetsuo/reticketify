services:
  reticketify-backend-user:
    image: reticketify-backend-user:0.0.1-SNAPSHOT
    container_name: reticketify-backend-user
    build:
      context: ./reticketify-backend-user  # Pasta onde está localizado o Dockerfile (raiz do projeto)
      network: host
    ports:
      - "8080:8080"  # Mapeamento da porta (host:container)
    environment:
      - SPRING_PROFILES_ACTIVE=docker  # Define o perfil ativo do Spring, se necessário
      - WEBHOOK_URL
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 25
    depends_on:
      reticketify-db-user:   # Garantir que o banco de dados esteja iniciado antes da aplicação
        condition: service_healthy
    network_mode: host

  reticketify-db-user:
    image: reticketify-db-user:latest
    container_name: reticketify-db-user
    build:
      context: ./reticketify-db-user  # Pasta onde está localizado o Dockerfile (raiz do projeto)
      network: host
    healthcheck:
      test: mysql --user=$$MYSQL_USER --password=$$MYSQL_PASSWORD -e 'SHOW DATABASES;'
      interval: 10s
      timeout: 5s
      retries: 100
    ports:
      - "3306:3306"  # Porta do banco de dados
    volumes:
      - db-data-user:/var/lib/mysql
    network_mode: host
  
  reticketify-frontend-spa-heroui:
    image: reticketify-frontend-spa-heroui:latest
    container_name: reticketify-frontend-spa-heroui
    build:
      context: ./reticketify-frontend-spa-heroui
      network: host
    ports:
      - "3000:3000"
    depends_on:
      reticketify-db-user:   # Garantir que o banco de dados esteja iniciado antes da aplicação
        condition: service_started
    network_mode: host

volumes:
  db-data-user: # Volume persistente para os dados do banco de dados
